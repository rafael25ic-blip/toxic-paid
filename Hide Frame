loadstring([[
local p = game.Players.LocalPlayer

-- Clases y nombres de efectos a controlar
local EFFECT_CLASSES = {
    "ParticleEmitter"
}
local EFFECT_KEYS = {
    "Effect",
}

-- Nombres de efectos de mascota que NO tocamos
local PET_EFFECTS = { "PetStat","PetAura","PetGlow" }

-- Helper: true si el nombre corresponde a un efecto de mascota
local function isPetEffect(name)
    for _, pet in ipairs(PET_EFFECTS) do
        if name:lower():find(pet:lower()) then
            return true
        end
    end
    return false
end

-- Helper: true si el objeto es uno de los efectos que queremos manejar
local function isOurEffect(v)
    for _, cls in ipairs(EFFECT_CLASSES) do
        if v:IsA(cls) then return true end
    end
    for _, key in ipairs(EFFECT_KEYS) do
        if v.Name:lower():find(key:lower()) then return true end
    end
    return false
end

-- Almacenamos aquí los efectos cuando los ocultamos: [obj] = originalParent
_G.StoredEffects = _G.StoredEffects or {}

-- Oculta todos los efectos actuales
local function hideAll()
    for _, v in ipairs(game:GetDescendants()) do
        if isOurEffect(v) and not isPetEffect(v.Name) and not _G.StoredEffects[v] then
            pcall(function()
                _G.StoredEffects[v] = v.Parent
                v.Parent = nil
            end)
        end
    end
end

-- Restaura todos los efectos que tenemos guardados
local function showAll()
    for v, originalParent in pairs(_G.StoredEffects) do
        pcall(function()
            if v and originalParent then
                v.Parent = originalParent
            end
        end)
    end
    _G.StoredEffects = {}
end

-- Configuramos eventos sólo la primera vez
if not _G.ToggleInit then
    -- Al reaparecer el personaje, reaplicamos el modo actual
    p.CharacterAdded:Connect(function()
        wait(1)
        if _G.EffectsHidden then hideAll() else showAll() end
    end)
    -- Si se generan efectos nuevos mientras estamos en “ocultar”
    game.DescendantAdded:Connect(function(o)
        if _G.EffectsHidden and isOurEffect(o) and not isPetEffect(o.Name) then
            wait(0.1)
            pcall(function()
                if not _G.StoredEffects[o] then
                    _G.StoredEffects[o] = o.Parent
                    o.Parent = nil
                end
            end)
        end
    end)
    _G.ToggleInit = true
end

-- Alternamos la bandera y ejecutamos
_G.EffectsHidden = not _G.EffectsHidden
if _G.EffectsHidden then
    hideAll()
    warn("▶ Efectos ocultos")
else
    showAll()
    warn("▶ Efectos restaurados")
end
]])()
